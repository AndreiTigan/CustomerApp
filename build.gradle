plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

configurations {
	jaxb
}

dependencies {
	jaxb (
			'com.sun.xml.bind:jaxb-xjc:2.2.4-1'
	)

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.data:spring-data-jpa'
	implementation 'org.springframework:spring-web'
	implementation 'org.postgresql:postgresql'
	implementation 'org.liquibase:liquibase-core:4.5.0'
	implementation 'javax.persistence:javax.persistence-api'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	implementation 'org.springdoc:springdoc-openapi-ui:1.5.12'
	implementation 'org.springframework.ws:spring-ws-core'
	implementation 'com.graphql-java:graphql-java:11.0'
	implementation 'com.graphql-java:graphql-java-spring-boot-starter-webmvc:1.0'
	implementation 'com.graphql-java:graphql-java-extended-scalars:17.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'


}

test {
	useJUnitPlatform()
}

task generateJavaClasses {
	System.setProperty('javax.xml.accessExternalSchema', 'all')
	def jaxbTargetDir = file("src/main/java/")
	doLast {
		jaxbTargetDir.mkdirs()
		ant.taskdef(
				name: 'xjc',
				classname: 'com.sun.tools.xjc.XJCTask',
				classpath: configurations.jaxb.asPath
		)
		ant.jaxbTargetDir = jaxbTargetDir
		ant.xjc(
				destdir: '${jaxbTargetDir}',
				package: 'com.example.poc.wsdl_classes',
				schema: 'src/main/resources/wsdl/countries.wsdl',
				language: 'WSDL'
		)
	}
}
